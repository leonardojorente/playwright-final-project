name: Azure E2E Tests

trigger: none  # Manual trigger only (equivalent to workflow_dispatch)

# select enviroment to run manuaal tests
parameters:
- name: environment
  displayName: test environment
  type: string
  default: prod
  values:
  - prod
  - dev

variables:
- ${{ if eq(parameters.environment, 'prod') }}:
    - group: 'variables_prod'
- ${{ if eq(parameters.environment, 'dev') }}:
    - group: 'variables_dev'

jobs:
- job: e2e_tests
  displayName: Run E2E Tests
  pool:
    #vmImage: 'ubuntu-20.04' #free ubuntu image available for Azure DevOps
    name: 'Default' # use my self-hosted agent
    demands:
      - agent.name -equals AgentSelfHosted  # Substitua pelo nome da m√°quina

  steps:
    # print environment variables
  - script: |
      echo "========== PRINTING VARIABLES =========="
      echo "Build ID: $(Build.BuildId)"
      echo "Build Number: $(Build.BuildNumber)"
      echo "Environment: ${{ parameters.environment }}"
      echo "BASE_URL_WEB: $(BASE_URL_WEB)"
      echo "BASE_URL_API: $(BASE_URL_API)"
      echo "USER: $(USER)"
      echo "PASSWORD: $(PASSWORD)"
      echo "Agent Name: $(Agent.Name)"
      echo "Agent OS: $(Agent.OS)"
      echo "========================================"
    displayName: 'Set and Print Variables'


  - checkout: self
    displayName: 'Checkout code'

  - task: NodeTool@0
    displayName: 'Setup Node.js'
    inputs:
      versionSpec: '22.x'

  - script: npm ci
    displayName: 'Install dependencies'

  - script: npx playwright install --with-deps chromium
    displayName: 'Install Playwright Browsers'

  - script: npm run ui-cross-env-ci || true
    displayName: 'Run Playwright tests'
    env:
      CI: true
      PASSWORD: $(PASSWORD) # Explicit mapping for secret variable


  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: 'playwright-report'
      artifact: 'playwright-report'
      publishLocation: 'pipeline'
    condition: succeededOrFailed()  # Always publish the report, even if tests fail
    displayName: 'Publish Playwright artifact report html'

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/e2e-*.xml'
    condition: succeededOrFailed()  # Always publish the report, even if tests fail
    displayName: 'Publish Playwright junit report'  