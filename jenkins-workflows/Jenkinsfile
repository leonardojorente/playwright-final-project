pipeline {
    // agent { // where the pipeline will run
    //     docker {
    //         image 'mcr.microsoft.com/playwright:v1.53.0-noble'
    //     }
    // }
    agent any // Use any available agent

    // parameters {
    //     choice(
    //         name: 'ENVIRONMENT',
    //         choices: ['dev', 'prod'],
    //         description: 'Select environment'
    //     )
    // }

    environment {
        BASE_URL_WEB = "https://barrigareact.wcaquino.me"
        BASE_URL_API = "https://barrigarest.wcaquino.me"
        USER = ''
        PASSWORD = ''
    }


    stages {
        stage('Initialize credentials') {
            steps {
                script {
                    echo "enviroment choice: ${params.ENVIRONMENT}"
                    // Determine credential IDs based on selected environment
                    def userCredId = params.ENVIRONMENT == 'dev' ? 'user_dev' : 'user_prod'
                    def passCredId = params.ENVIRONMENT == 'dev' ? 'password_dev' : 'password_prod'

                    // Load credentials securely
                    withCredentials([
                        usernamePassword(credentialsId: userCredId, usernameVariable: 'USERNAME', passwordVariable: 'USER_PASSWORD'),
                        usernamePassword(credentialsId: passCredId, usernameVariable: 'PASSWORD_USERNAME', passwordVariable: 'PASSWORD')
                    ]) {
                        env.USER = USERNAME
                        env.PASSWORD = PASSWORD
                    }
                }
            }
        }

        stage('Print env variables') {
            steps {
                script {
                    echo "ENVIRONMENT: ${params.ENVIRONMENT}"
                    echo "BASE_URL_API: ${env.BASE_URL_API}"
                    echo "BASE_URL_WEB: ${env.BASE_URL_WEB}"
                    echo "USER: ${env.USER}"
                    echo "PASSWORD: ${env.PASSWORD}"
                }
            }
        }
        stage('Install dependencies') {
            steps {
                sh 'npm install'
            }
        }
        stage('ESLint tests') {
            steps {
                sh 'npx eslint ./cypress --ext .js'
            }
        }
        stage('Playright tests') {
            steps {
                sh 'npx playwright test tests/ui/e2e-tests/cross-env-tests.spec.ts'
            }
        }
    }
}
